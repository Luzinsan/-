<?xml version="1.0"?><mxGraphModel><root><mxCell id="0" /><mxCell id="1" parent="0" /><mxCell id="edge1" style="rounded=1;html=1;exitX=0.5;exitY=0;entryX=0.5;entryY=1;jettySize=auto;curved=0;endArrow=block;dashed=0;endFill=1;" parent="1" edge="1" source="node4" target="node5"><mxGeometry as="geometry" relative="1" /></mxCell><mxCell id="node1" value="&lt;p style='margin:0px;text-align:start;margin-left:4px;;font-size:10.0px;font-family:Times,serif;color:#000000;'&gt;App&lt;/p&gt;&lt;hr size='1'/&gt;&lt;p style='margin:0px;text-align:start;margin-left:4px;;font-size:10.0px;font-family:Times,serif;color:#000000;'&gt;archs_container : DragSourceContainer&lt;br/&gt;dataset_container : DragSourceContainer&lt;br/&gt;layer_container : DragSourceContainer&lt;br/&gt;left_panel&lt;br/&gt;node_editor : NodeEditor&lt;br/&gt;plugin_menu_id&lt;br/&gt;plugins : list&lt;br/&gt;right_panel&lt;/p&gt;&lt;hr size='1'/&gt;&lt;p style='margin:0px;text-align:start;margin-left:4px;;font-size:10.0px;font-family:Times,serif;color:#000000;'&gt;__init__()&lt;br/&gt;add_plugin(name, callback)&lt;br/&gt;start()&lt;br/&gt;update()&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeColor=black;strokeWidth=1;fillColor=#ffffff;" parent="1" vertex="1"><mxGeometry x="4.0" y="461.5" width="239.5" height="238.5" as="geometry" /></mxCell><mxCell id="node2" value="&lt;p style='margin:0px;text-align:start;margin-left:4px;;font-size:10.0px;font-family:Times,serif;color:#000000;'&gt;CustomDataset&lt;/p&gt;&lt;hr size='1'/&gt;&lt;p style='margin:0px;text-align:start;margin-left:4px;;font-size:10.0px;font-family:Times,serif;color:#000000;'&gt;__init__(root: str, train: bool, download: bool, transform): None&lt;br/&gt;copy_dataset(sender, app_data, train_params__file: tuple[2])&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeColor=black;strokeWidth=1;fillColor=#ffffff;" parent="1" vertex="1"><mxGeometry x="262.0" y="548.0" width="365.5" height="65.5" as="geometry" /></mxCell><mxCell id="node3" value="&lt;p style='margin:0px;text-align:start;margin-left:4px;;font-size:10.0px;font-family:Times,serif;color:#000000;'&gt;DataModule&lt;/p&gt;&lt;hr size='1'/&gt;&lt;p style='margin:0px;text-align:start;margin-left:4px;;font-size:10.0px;font-family:Times,serif;color:#000000;'&gt;train&lt;br/&gt;val&lt;/p&gt;&lt;hr size='1'/&gt;&lt;p style='margin:0px;text-align:start;margin-left:4px;;font-size:10.0px;font-family:Times,serif;color:#000000;'&gt;__init__(dataset_class, transforms)&lt;br/&gt;train_dataloader()&lt;br/&gt;val_dataloader()&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeColor=black;strokeWidth=1;fillColor=#ffffff;" parent="1" vertex="1"><mxGeometry x="645.5" y="519.25" width="206.5" height="123.0" as="geometry" /></mxCell><mxCell id="node4" value="&lt;p style='margin:0px;text-align:start;margin-left:4px;;font-size:10.0px;font-family:Times,serif;color:#000000;'&gt;Module&lt;/p&gt;&lt;hr size='1'/&gt;&lt;p style='margin:0px;text-align:start;margin-left:4px;;font-size:10.0px;font-family:Times,serif;color:#000000;'&gt;accept_init : list&lt;br/&gt;loss_func&lt;br/&gt;lr&lt;br/&gt;net&lt;br/&gt;optimizer&lt;/p&gt;&lt;hr size='1'/&gt;&lt;p style='margin:0px;text-align:start;margin-left:4px;;font-size:10.0px;font-family:Times,serif;color:#000000;'&gt;__init__(sequential, optimizer, lr, loss_func)&lt;br/&gt;accuracy(Y_hat, Y, averaged)&lt;br/&gt;apply_init(inputs, init)&lt;br/&gt;configure_optimizers()&lt;br/&gt;forward(X)&lt;br/&gt;init_cnn(module)&lt;br/&gt;layer_summary(X_shape)&lt;br/&gt;loss(Y_hat, Y, averaged)&lt;br/&gt;metric(batch, mode, averaged)&lt;br/&gt;training_step(batch)&lt;br/&gt;validation_step(batch)&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeColor=black;strokeWidth=1;fillColor=#ffffff;" parent="1" vertex="1"><mxGeometry x="869.62" y="428.5" width="258.2600000000001" height="304.5" as="geometry" /></mxCell><mxCell id="node5" value="&lt;p style='margin:0px;text-align:start;margin-left:4px;;font-size:10.0px;font-family:Times,serif;color:#000000;'&gt;Pipeline&lt;/p&gt;&lt;hr size='1'/&gt;&lt;p style='margin:0px;text-align:start;margin-left:4px;;font-size:10.0px;font-family:Times,serif;color:#000000;'&gt;accept_init : list&lt;br/&gt;debug : bool&lt;br/&gt;max_epochs&lt;br/&gt;net&lt;br/&gt;pipeline : list&lt;br/&gt;task : Task&lt;br/&gt;train_params : dict&lt;br/&gt;trainer : Trainer&lt;/p&gt;&lt;hr size='1'/&gt;&lt;p style='margin:0px;text-align:start;margin-left:4px;;font-size:10.0px;font-family:Times,serif;color:#000000;'&gt;__init__(init_node: 'nodes.DataNode')&lt;br/&gt;collect_layers(node: Node)&lt;br/&gt;flow(sender, app_data, data_node: 'nodes.DataNode', fake)&lt;br/&gt;get_params(params_node: Node): dict&lt;br/&gt;init_dataloader(data_node: Node)&lt;br/&gt;init_layer(layer: Node): Any&lt;br/&gt;init_normal(module: nn.Module)&lt;br/&gt;init_xavier(module)&lt;br/&gt;keep_train(sender, app_data, data_node: 'nodes.DataNode')&lt;br/&gt;load_weight(sender, app_data, train_params__file)&lt;br/&gt;save_weight(sender, app_data, train_params__file)&lt;br/&gt;train(fake)&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeColor=black;strokeWidth=1;fillColor=#ffffff;" parent="1" vertex="1"><mxGeometry x="829.88" y="4.5" width="337.7399999999999" height="370.5" as="geometry" /></mxCell><mxCell id="node6" value="&lt;p style='margin:0px;text-align:start;margin-left:4px;;font-size:10.0px;font-family:Times,serif;color:#000000;'&gt;ProgressBoard&lt;/p&gt;&lt;hr size='1'/&gt;&lt;p style='margin:0px;text-align:start;margin-left:4px;;font-size:10.0px;font-family:Times,serif;color:#000000;'&gt;enable : bool&lt;br/&gt;task&lt;br/&gt;widget : ViewNode_2D&lt;br/&gt;x : int&lt;/p&gt;&lt;hr size='1'/&gt;&lt;p style='margin:0px;text-align:start;margin-left:4px;;font-size:10.0px;font-family:Times,serif;color:#000000;'&gt;__init__(task, widget)&lt;br/&gt;disable()&lt;br/&gt;get_metrics(trainer, model)&lt;br/&gt;on_train_batch_end(trainer, pl_module, outputs, batch, batch_idx)&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeColor=black;strokeWidth=1;fillColor=#ffffff;" parent="1" vertex="1"><mxGeometry x="1146.0" y="494.5" width="377.5" height="172.5" as="geometry" /></mxCell></root></mxGraphModel>